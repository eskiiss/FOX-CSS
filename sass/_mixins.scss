// LAYOUT

// Media queries - min width
@mixin bp($point) {
    @media screen and (min-width: $point / 16 + em) { @content; }
}

// Media queries - max width
@mixin bpmax($point) {
    @media screen and (max-width: $point / 16 + em) { @content; }
}

// Responsive blocks (two sizes)
@mixin rblock($size1, $breakpoint1) {
    @media screen and (min-width: $breakpoint1 / 16 + em) {
        display: inline-block;
        width: $size1;
    }
}

// Responsive blocks (three sizes)
@mixin rblock2($size1, $size2, $breakpoint1, $breakpoint2) {
    @media screen and (min-width: $breakpoint1 / 16 + em) {
        display: inline-block;
        width: $size1;
    }
    @media screen and (min-width: $breakpoint2 / 16 + em) {
        width: $size2;
    }
}

// Flexbox mixins
// http://css-tricks.com/snippets/css/a-guide-to-flexbox/
@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex($flexvalues) {
    -webkit-box-flex: $flexvalues;
    -moz-box-flex: $flexvalues;
    -webkit-flex: $flexvalues;
    -ms-flex: $flexvalues;
    flex: $flexvalues;
}

@mixin order($val) {
    -webkit-box-ordinal-group: $flexval;  
    -moz-box-ordinal-group: $flexval;     
    -ms-flex-order: $flexval;     
    -webkit-order: $flexval;  
    order: $flexval;
}

// FORMATTING

// Font size
@mixin fs($fontsize: 16, $fontbase: 16) {
    font-size: $fontsize + px;
    font-size: ($fontsize / $fontbase) * 1rem;
}

// Line height
@mixin lh($heightvalue: 16, $heightbase: 16) {
    font-size: $heightvalue + px;
    font-size: ($heightvalue / $heightbase) * 1rem;
}

// Opacity
@mixin opacity($opacity) {
    opacity: $opacity;
    opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}

// Retina images
@mixin image-2x($image, $width, $height) {
    @media (-moz-min-device-pixel-ratio: 1.3),
        (-o-min-device-pixel-ratio: 2.6/2),
        (-webkit-min-device-pixel-ratio: 1.3),
        (min-device-pixel-ratio: 1.3),
        (min-resolution: 1.3dppx) {
        // on retina, use image that's scaled by 2
        background-image: url($image);
        background-size: $width $height;
    }
}

// Radius
@mixin rounded($radius: 10px) {
    border-radius: $radius;
}

// Text truncate
@mixin ellip {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

